<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="New Test Suite" time="51" tests="2" failures="0" errors="0">
   <testsuite name="New Test Suite" tests="2" failures="0" errors="0" time="51" timestamp="2019-02-22 12:38:21" hostname="apurvas - ULTP_605.synerzipune.local" id="Test Suites/New Test Suite">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="E:\\test\\API-test\\Reports\\New Test Suite\\20190222_123813"/>
         <property name="logFiles" value="E:\\test\\API-test\\Reports\\New Test Suite\\20190222_123813\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="apurvas - ULTP_605.synerzipune.local"/>
         <property name="hostAddress" value="172.24.4.77"/>
         <property name="os" value="Windows 10 64bit"/>
         <property name="katalonVersion" value="5.10.1.1"/>
      </properties>
      <testcase name="Test Cases/MercatusTestCases/ProjectTestCases/CreateValidProjectTestCase" classname="Test Cases/MercatusTestCases/ProjectTestCases/CreateValidProjectTestCase" status="PASSED">
         <system-out><![CDATA[2019-02-22 12:38:22 - [TEST_CASE][PASSED] - Test Cases/MercatusTestCases/ProjectTestCases/CreateValidProjectTestCase: Test Cases/MercatusTestCases/ProjectTestCases/CreateValidProjectTestCase

2019-02-22 12:38:22 - [TEST_STEP][PASSED] - response = sendRequest(findTestObject("Mercatus/Projects/CreateValidProject", ["url3":findTestData("Variables").getValue(1, 1)])): Send request successfully

2019-02-22 12:38:59 - [MESSAGE][INFO] - HAR: E:\test\API-test\Reports\New Test Suite\20190222_123813\requests\main\0.har

2019-02-22 12:38:59 - [MESSAGE][PASSED] - Send request successfully

2019-02-22 12:38:59 - [TEST_STEP][PASSED] - containsString(response, "Jan-151", false): Check contain string successfully

2019-02-22 12:38:59 - [MESSAGE][PASSED] - Check contain string successfully

2019-02-22 12:38:59 - [TEST_STEP][PASSED] - slurper = new groovy.json.JsonSlurper(): null

2019-02-22 12:38:59 - [TEST_STEP][PASSED] - result = slurper.parseText(response.getResponseBodyContent()): null

2019-02-22 12:38:59 - [TEST_STEP][PASSED] - value = projectId: null

2019-02-22 12:38:59 - [TEST_STEP][PASSED] - println("Project id extracted is: " + value): null

2019-02-22 12:38:59 - [TEST_STEP][PASSED] - projId = value: null

2019-02-22 12:38:59 - [TEST_STEP][PASSED] - println(projId): null

2019-02-22 12:38:59 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Mercatus/Portfolio/CreatePortfolio")): Send request and verify the response successfully

2019-02-22 12:39:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-02-22 12:39:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-02-22 12:39:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-02-22 12:39:03 - [MESSAGE][PASSED] - Verify response successfully

2019-02-22 12:39:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-02-22 12:39:03 - [TEST_STEP][PASSED] - Start listener action : afterTestCase: null

2019-02-22 12:39:03 - [TEST_STEP][PASSED] - try: null

2019-02-22 12:39:03 - [TEST_STEP][PASSED] - tc_ids = getTestCaseVariables()["testrail_tc_id"].split(","): null

2019-02-22 12:39:03 - [TEST_STEP][PASSED] - for (def n : (0..(tc_ids.length - 1))): null

2019-02-22 12:39:03 - [TEST_STEP][PASSED] - G_run_testrail_tc_id.add(tc_ids[n]): null

2019-02-22 12:39:03 - [TEST_STEP][PASSED] - G_run_testrail_tc_status.add(testCaseContext.getTestCaseStatus()): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/MercatusTestCases/ProjectTestCases/UpdateValidAssumptionTestcase" classname="Test Cases/MercatusTestCases/ProjectTestCases/UpdateValidAssumptionTestcase" status="PASSED">
         <system-out><![CDATA[2019-02-22 12:39:03 - [TEST_CASE][PASSED] - Test Cases/MercatusTestCases/ProjectTestCases/UpdateValidAssumptionTestcase: Test Cases/MercatusTestCases/ProjectTestCases/UpdateValidAssumptionTestcase

2019-02-22 12:39:04 - [TEST_STEP][PASSED] - Response = sendRequest(findTestObject("Mercatus/Projects/UpdateValidAssumption", ["Projectid":findTestData("CreateProject2").getValue(4, 1), "AssumpId":2])): Send request successfully

2019-02-22 12:39:07 - [MESSAGE][INFO] - HAR: E:\test\API-test\Reports\New Test Suite\20190222_123813\requests\main\1.har

2019-02-22 12:39:07 - [MESSAGE][PASSED] - Send request successfully

2019-02-22 12:39:07 - [TEST_STEP][PASSED] - verifyMatch(""assumptionId":2,", ""assumptionId":2,", true): Actual text '"assumptionId":2,' and expected text '"assumptionId":2,' are matched  using regular expression

2019-02-22 12:39:07 - [MESSAGE][PASSED] - Actual text '"assumptionId":2,' and expected text '"assumptionId":2,' are matched  using regular expression

2019-02-22 12:39:07 - [TEST_STEP][PASSED] - Start listener action : afterTestCase: null

2019-02-22 12:39:07 - [TEST_STEP][PASSED] - try: null

2019-02-22 12:39:07 - [TEST_STEP][PASSED] - tc_ids = getTestCaseVariables()["testrail_tc_id"].split(","): null

2019-02-22 12:39:07 - [TEST_STEP][PASSED] - catch (NullPointerException ex): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2019-02-22 12:38:21 - [TEST_SUITE][PASSED] - New Test Suite: Test Cases/MercatusTestCases/ProjectTestCases/UpdateValidAssumptionTestcase]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
